type Note @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  completed: Boolean!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input NoteInput {
  id: ID
  name: String!
  completed: Boolean!
  createdAt: AWSDateTime
}

input UpdateNoteInput {
  id: ID!
  name: String
  completed: Boolean
  createdAt: AWSDateTime
}

type Query {
  getNoteById(noteId: String!): Note @aws_api_key @aws_cognito_user_pools
  listNotes: [Note] @aws_api_key @aws_cognito_user_pools
}

type Mutation {
  createNote(note: NoteInput!): Note
    @aws_cognito_user_pools(cognito_groups: ["admin"])
  updateNote(note: UpdateNoteInput!): Note
    @aws_cognito_user_pools(cognito_groups: ["admin"])
  deleteNote(noteId: String!): String
    @aws_cognito_user_pools(cognito_groups: ["admin"])
}

type Subscription {
  onCreateNote: Note @aws_subscribe(mutations: ["createNote"])
  onDeleteNote: String @aws_subscribe(mutations: ["deleteNote"])
  onUpdateNote: Note @aws_subscribe(mutations: ["updateNote"])
}
